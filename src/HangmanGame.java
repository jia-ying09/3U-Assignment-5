
import java.awt.GraphicsConfiguration;
import java.util.Scanner;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author linj4653
 */
public class HangmanGame extends javax.swing.JFrame {

    /**
     * Creates new form HangmanGame
     */
    public HangmanGame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        word = new javax.swing.JLabel();
        wordInput = new javax.swing.JTextField();
        enter = new javax.swing.JButton();
        enterGuess = new javax.swing.JButton();
        guessInput = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();
        guess = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        word.setText("Player 1 Enter Word:");

        wordInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wordInputActionPerformed(evt);
            }
        });

        enter.setText("Enter");
        enter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterActionPerformed(evt);
            }
        });

        enterGuess.setText("Enter Guess");
        enterGuess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterGuessActionPerformed(evt);
            }
        });

        guessInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guessInputActionPerformed(evt);
            }
        });

        output.setColumns(20);
        output.setRows(5);
        jScrollPane1.setViewportView(output);

        guess.setText("Player 2 Guess a letter:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(enterGuess)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(word, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(wordInput, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(enter, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(guess, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guessInput, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(word, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(wordInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enter))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guess, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guessInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(enterGuess)
                .addGap(8, 8, 8))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void wordInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wordInputActionPerformed
    }//GEN-LAST:event_wordInputActionPerformed

    private void enterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterActionPerformed
        //insert Scanner
        Scanner input = new Scanner(System.in);
        int right = 0;
        int wrong = 0;

        //input the word
        String word = wordInput.getText();
        String words = word;
        //clear the screen
        wordInput.setText(word + "                                                                      ");

        //get the length of the word
        int length = word.length();

        //print out a line for each letter
        for (int i = 0; i < length; i++) {
            String one = word.substring(i, i + 1);
            //get character
            char character = word.charAt(i);
            word = word.replace(character, '-');
            output.setText(word);
        }

        StringBuilder dash = new StringBuilder(word);


    }//GEN-LAST:event_enterActionPerformed

    private void enterGuessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterGuessActionPerformed
        //insert Scanner
        Scanner input = new Scanner(System.in);
        int right = 0;
        int wrong = 0;

        //input the word
        String word = wordInput.getText();
        String words = word;

        //clear the screen
        wordInput.setText(word + "                                                                      ");

        //get the length of the word
        int length = word.length();

        //print out a line for each letter
        for (int i = 0; i < length; i++) {
            String one = word.substring(i, i + 1);
            //get character
            char character = word.charAt(i);
            word = word.replace(character, '-');
            output.setText(word);
        }

        StringBuilder dash = new StringBuilder(word);

        while ((wrong < 6) && (right < length)) {

            int x = 0;
            // showing the start of the gallows
            if (wrong == 0) //showing the word with their current correctly guessed letters and asking for a guess
            {
                System.out.println(dash);
            }
            output.setText("Enter your guess");

            //next letter typed is your guess
            String guess = input.nextLine();
            char guesses = guess.charAt(0);

            //comparing guess against each letter in the word and if it correct replace the dash with the letter
            for (int i = 0; i < length;) {
                char letter = words.charAt(i);
                if (guesses == letter) {

                    right++;
                    x++;

                    dash.setCharAt(i, guesses);

                }
                i++;
            }

            //tell the plyer how many lives they have left
                                  
            
            if (x < 1) {
                wrong++;

                if (wrong == 1) {
                    output.setText("You have 5 lives left");

                }

                if (wrong == 2) {
                    output.setText("You have 4 lives left");
                }

                if (wrong == 3) {
                    output.setText("You have 3 lives left");
                }

                if (wrong == 4) {
                    output.setText("You have 2 lives left");
                }

                if (wrong == 5) {
                    output.setText("You have 1 life left");
                }
                if (wrong == 6) {
                    output.setText("You have no lives left");
                }
            }

        }

        //telling them they won
        if (right == length) {
            String dashes = dash.toString();
            output.setText(dashes);
            output.setText("YOU WIN!");

            //telling them they lost and telling them what the word was
        } else {
            output.setText("GAME OVER");
            output.setText("The word was " + words);
        }


    }//GEN-LAST:event_enterGuessActionPerformed

    private void guessInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guessInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_guessInputActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HangmanGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HangmanGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HangmanGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HangmanGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HangmanGame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton enter;
    private javax.swing.JButton enterGuess;
    private javax.swing.JLabel guess;
    private javax.swing.JTextField guessInput;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea output;
    private javax.swing.JLabel word;
    private javax.swing.JTextField wordInput;
    // End of variables declaration//GEN-END:variables
}
